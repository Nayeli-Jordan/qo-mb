.container {
  margin: 0 auto;
  max-width: 900px;
  width: 90%;
  &.container-large {
    max-width: 820px;
    width: 90%!important;
  }
}
@media #{$medium-and-up} {
  .container {
    width: 85%;
  }
}
@media #{$large-and-up} {
  .container {
    width: 70%;
  }
}
.col .row {
  margin-left: (-1 * $gutter-width / 2);
  margin-right: (-1 * $gutter-width / 2);
}

.section {
  padding-top: 1rem;
  padding-bottom: 1rem;

  &.no-pad {
    padding: 0;
  }
  &.no-pad-bot {
    padding-bottom: 0;
  }
  &.no-pad-top {
    padding-top: 0;
  }
}


// Mixins to eliminate code repitition
@mixin reset-offset {
  margin-left: auto;
  left: auto;
  right: auto;
}
@mixin grid-classes($size, $i, $perc) {
  &.offset-#{$size}#{$i} {
    margin-left: $perc;
  }
  &.pull-#{$size}#{$i} {
    right: $perc;
  }
  &.push-#{$size}#{$i} {
    left: $perc;
  }
}


.row {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;

  // Clear floating children
  &:after {
    content: "";
    display: table;
    clear: both;
  }

  .col {
    float: left;
    box-sizing: border-box;
    padding: 0 $gutter-width / 2;
    min-height: 1px;

    &[class*="push-"],
    &[class*="pull-"] {
      position: relative;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      &.s#{$i} {
        width: $perc;
        @include reset-offset;
      }
      $i: $i + 1;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      @include grid-classes("s", $i, $perc);
      $i: $i + 1;
    }

    @media #{$medium-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.m#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("m", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$large-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.l#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("l", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$extra-large-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.xl#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("xl", $i, $perc);
        $i: $i + 1;
      }
    }
  }
}


.col-product {
  float: left;
  box-sizing: border-box;
  padding: 0 0.75rem;
  min-height: 1px;
  width: 25%;
  margin-left: auto;
  left: auto;
  right: auto;
  position: relative;
  p { margin: 0px; }
  &:hover {
    .bg-light-opacity {
      background-color: rgba(255, 255, 255, 0.4);
    }
    .bg-product {
      transform: scale(0.9);
    }
    .title-product{
      background-color: rgba(255, 255, 255, 0.8);
    }
  }
  @media (min-width: 851px) {
    &:nth-child(4n+1){
      clear: both;
    } 
    &:nth-child(4n+1) .bg-light-opacity {
      border-top-left-radius: 20px;
      border-bottom-left-radius: 20px;
    }   
    &:nth-child(4n) .bg-light-opacity {
      border-top-right-radius: 20px;
      border-bottom-right-radius: 20px;
    }     
  }
  @media (min-width: 601px) and (max-width: 850px) {
    width: 33.33333%; 
    &:nth-child(3n+1){
      clear: both;
    }
    &:nth-child(3n+1) .bg-light-opacity {
      border-top-left-radius: 20px;
      border-bottom-left-radius: 20px;
    }   
    &:nth-child(3n) .bg-light-opacity {
      border-top-right-radius: 20px;
      border-bottom-right-radius: 20px;
    }      
  }
  @media #{$small-and-down} {
    width: 50%; 
    &:nth-child(2n+1){
      clear: both;
    }
    &:nth-child(2n+1) .bg-light-opacity {
      border-top-left-radius: 20px;
      border-bottom-left-radius: 20px;
    }   
    &:nth-child(2n) .bg-light-opacity {
      border-top-right-radius: 20px;
      border-bottom-right-radius: 20px;
    }      
  }
}

.col-product-single .bg-light-opacity,
.col-product div.bg-light-opacity {
  background-color: rgba(255, 255, 255, 0.2);
  width: 100%;
  padding-bottom: calc(140% - 10px);
  position: absolute;    
  left: 0px;
  transition: .3s ease-out;
  //z-index: -1;
}
.limit-block-product .bg-light-opacity{
  padding-bottom: calc(140%);
  border-radius: 20px;
}

.limit-block-product {
    max-width: 300px;
    margin: auto;
    position: relative;
}

.section-products-related {
  @media (min-width: 601px) and (max-width: 850px) {
    .col-product:nth-child(4n) {
      display: none;
    }
  }
  @media #{$small-and-down} {

  }
}

#page-mb-stock {
  position: relative;
  z-index: 99;
  padding-bottom: 70px;
}

#orden_compra {
  position: relative;
  z-index: 1000;  
}
.page-orden {
  position: relative;
  width: 820px;
  max-width: 100%;
  /* height: 1030px; */
  background-color: $light-color;
  box-shadow: 3px -1px 2px 0 rgba(0, 0, 0, 0.14), 
              0 3px 1px -2px rgba(0, 0, 0, 0.12), 
              0 1px 5px 0 rgba(0, 0, 0, 0.2);
  overflow: hidden;
  .header-orden {
    padding: 30px 20px;
    text-align: center;
    background-image: linear-gradient(to right, #f4c3b5, #f7d8b1, #f6e4b0, #eee5b8, #e2e2c2);
    img {
        filter: drop-shadow(2px 1px 3px #944373);
        -webkit-filter: drop-shadow(2px 1px 3px #944373);
    }
  }
  .body-orden {
    padding: 30px;
    font-family: $font-stack;
    font-style: normal;
    table {
      position: relative;
      z-index: 1;
      tr { 
        border-color: transparent; 
        td {
          strong {
            color: $primary-color;
            font-weight: 700;
          }
        }
      }
    }
    .bg-image { opacity: 0.8; }
  }
}

#origen-orden-single {
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 0 10px;
  color: $primary-color;
  font-size: 10px;
  background-color: #fff;
}